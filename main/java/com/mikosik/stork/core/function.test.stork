
  build {
    module
      (import("stork.function.self"))
      (import("stork.function.compose"))
      (import("stork.function.flip"))
      (import("stork.opcode.opArg"))
  }

  test {
    suite("function")
      (suite("self")
        (case
          (self(x))
          (x)))
      (suite("compose")
        (case
          (compose(f)(g)(x))
          (f(g(x)))))
      (suite("flip")
        (case
          (flip(f)(x)(y))
          (f(y)(x)))
        (case
          (flip(f)(x)(y)(z))
          (f(y)(x)(z))))
  }
