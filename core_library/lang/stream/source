
  some(head)(tail)(vSome)(vNone) {
    vSome(head)(tail)
  }

  none(vSome)(vNone) {
    vNone
  }


  hasSome(stream) {
    stream
      ((head)(tail) {
        true
      })
      (false)
  }

  hasNone(stream) {
    not(hasSome(stream))
  }

  equal(equalElements)(streamA)(streamB) {
    streamA
      ((headA)(tailA) {
        streamB
          ((headB)(tailB) {
            and
              (equalElements(headA)(headB))
              (equal(equalElements)(tailA)(tailB))
          })
          (false)
      })
      (hasNone(streamB))
  }


  single(element) {
    some(element)(none)
  }

  repeat(element) {
    some
      (element)
      (repeat(element))
  }

  cycle(stream) {
    hasSome(stream)
      (prepend(stream)(cycle(stream)))
      (none)
  }

  iterate(next)(first) {
    some
      (first)
      (iterate(next)(next(first)))
  }


  each(transform)(stream) {
    stream
      ((head)(tail) {
        some
          (transform(head))
          (each(transform)(tail))
      })
      (none)
  }

  reduce(sum)(add)(stream) {
    stream
      ((head)(tail) {
        reduce
          (add(head)(sum))
          (add)
          (tail)
      })
      (sum)
  }

  reduceEager(sum)(add)(stream) {
    stream
      ((head)(tail) {
        EAGER(reduceEager)
          (add(head)(sum))
          (add)
          (tail)
      })
      (sum)
  }

  filter(predicate)(stream) {
    stream
      ((head)(tail) {
        predicate(head)
          (some(head)(filter(predicate)(tail)))
          (filter(predicate)(tail))
      })
      (none)
  }

  limit(n)(stream) {
    moreThan(0)(n)
      (stream
        ((head)(tail) {
          some(head)(limit(decrement(n))(tail))
        })
        (none))
      (none)
  }

  skip(n)(stream) {
    moreThan(0)(n)
      (stream
        ((head)(tail) {
          skip(decrement(n))(tail)
        })
        (none))
      (stream)
  }

  while(predicate)(stream) {
    stream
      ((head)(tail) {
        predicate(head)
          (some(head)(while(predicate)(tail)))
          (none)
      })
      (none)
  }

  append(secondStream)(stream) {
    stream
      ((head)(tail) {
        some(head)(append(secondStream)(tail))
      })
      (secondStream)
  }

  prepend {
    flip(append)
  }

  flatten(streams) {
    streams
      ((head)(tail) {
        prepend(head)(flatten(tail))
      })
      (none)
  }

  length(stream) {
    stream
      ((head)(tail) {
        add(1)(length(tail))
      })
      (0)
  }

  contains(condition)(stream){
    hasSome(filter(condition)(stream))
  }

  reverse {
    reduce(none)(some)
  }

  at(index)(stream) {
    atLeast(0)(index)
      (first(skip(index)(stream)))
      (nothing)
  }

  first(stream) {
    stream
      ((head)(tail){ something(head) })
      (nothing)
  }

  array(size) {
    arrayCollecting(size)(none)
  }

  arrayCollecting(size)(collected) {
    moreThan(0)(size)
      ((element) {
        arrayCollecting
          (decrement(size))
          (append(single(element))(collected))
      })
      (collected)
  }
